{"version":3,"sources":["search-icon.png","dictionary lazy /^/D.*/.json$/ groupOptions: {} namespace object","components/definitions.jsx","components/synonyms.jsx","components/antonyms.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","Definitions","props","className","values","meanings","item","index","key","length","deeperItem","deeperIndex","isPartofSpeech","Synonyms","synonyms","onClick","searchForWord","Antonyms","antonyms","App","state","landing","searchTerm","result","resultTitle","errorMessage","showError","handleChange","event","setState","target","value","word","indexOf","toLowerCase","handleSearch","preventDefault","toUpperCase","Dictionary","default","catch","err","href","rel","onSubmit","this","type","placeholder","onChange","autoFocus","handlesearch","alt","src","SearchIcon","SYNONYMS","ANTONYMS","MEANINGS","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0cbc0885.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-icon.625322a5.png\";","var map = {\n\t\"./DA.json\": [\n\t\t18,\n\t\t3\n\t],\n\t\"./DB.json\": [\n\t\t19,\n\t\t4\n\t],\n\t\"./DC.json\": [\n\t\t20,\n\t\t5\n\t],\n\t\"./DD.json\": [\n\t\t21,\n\t\t6\n\t],\n\t\"./DE.json\": [\n\t\t22,\n\t\t7\n\t],\n\t\"./DF.json\": [\n\t\t23,\n\t\t8\n\t],\n\t\"./DG.json\": [\n\t\t24,\n\t\t9\n\t],\n\t\"./DH.json\": [\n\t\t25,\n\t\t10\n\t],\n\t\"./DI.json\": [\n\t\t26,\n\t\t11\n\t],\n\t\"./DJ.json\": [\n\t\t27,\n\t\t12\n\t],\n\t\"./DK.json\": [\n\t\t28,\n\t\t13\n\t],\n\t\"./DL.json\": [\n\t\t29,\n\t\t14\n\t],\n\t\"./DM.json\": [\n\t\t30,\n\t\t15\n\t],\n\t\"./DN.json\": [\n\t\t31,\n\t\t16\n\t],\n\t\"./DO.json\": [\n\t\t32,\n\t\t17\n\t],\n\t\"./DP.json\": [\n\t\t33,\n\t\t18\n\t],\n\t\"./DQ.json\": [\n\t\t34,\n\t\t19\n\t],\n\t\"./DR.json\": [\n\t\t35,\n\t\t20\n\t],\n\t\"./DS.json\": [\n\t\t36,\n\t\t21\n\t],\n\t\"./DT.json\": [\n\t\t37,\n\t\t22\n\t],\n\t\"./DU.json\": [\n\t\t38,\n\t\t23\n\t],\n\t\"./DV.json\": [\n\t\t39,\n\t\t24\n\t],\n\t\"./DW.json\": [\n\t\t40,\n\t\t25\n\t],\n\t\"./DX.json\": [\n\t\t41,\n\t\t26\n\t],\n\t\"./DY.json\": [\n\t\t42,\n\t\t27\n\t],\n\t\"./DZ.json\": [\n\t\t43,\n\t\t28\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 16;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\r\n\r\nexport default function Definitions(props) {\r\n  return (\r\n    <>\r\n      <span className=\"definitionHeading\">\r\n          Definition \r\n      </span>\r\n      {Object.values(props.meanings).map((item, index) => {\r\n        return (\r\n          <div key={index}>\r\n            {item.length > 0 &&\r\n              item.map((deeperItem, deeperIndex) => {\r\n                return (\r\n                  typeof deeperItem === \"string\" && (\r\n                    <span\r\n                      key={deeperIndex}\r\n                      className={props.isPartofSpeech(deeperItem)}\r\n                    >\r\n                      {deeperItem}\r\n                    </span>\r\n                  )\r\n                );\r\n              })}\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Synonyms(props) {\r\n  return (\r\n    <div className=\"inlineContainer\">\r\n      <span className=\"inlineHeading\"> Synonyms </span>\r\n      {props.synonyms.map((item, index) => {\r\n        return (\r\n          <span\r\n            className=\"inlineItem\"\r\n            key={index}\r\n            onClick={() => props.searchForWord(item)}\r\n          >\r\n            {item}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Antonyms(props) {\r\n  return (\r\n    <div className=\"inlineContainer\">\r\n      <span className=\"inlineHeading\"> Antonyms </span>\r\n      {props.antonyms.map((item, index) => {\r\n        return (\r\n          <span\r\n            className=\"inlineItem\"\r\n            key={index}\r\n            onClick={() => props.searchForWord(item)}\r\n          >\r\n            {item}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport SearchIcon from './search-icon.png';\r\n\r\nimport Definitions from './components/definitions.jsx';\r\nimport Synonyms from './components/synonyms.jsx';\r\nimport Antonyms from './components/antonyms.jsx';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    landing: true,\r\n    searchTerm: '',\r\n    result: {},\r\n    resultTitle: '',\r\n    errorMessage: 'Nope, nothing found. Try another word.',\r\n    showError: false,\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ searchTerm: event.target.value });\r\n\r\n  }\r\n\r\n  isPartofSpeech = (word) => {\r\n    let partsOfSpeech = [\r\n      \"noun\",\r\n      \"verb\",\r\n      \"adjective\",\r\n    ];\r\n    if(partsOfSpeech.indexOf(word.toLowerCase()) > -1)\r\n      return 'wordType'\r\n    else\r\n      return 'wordDefinition'\r\n  }\r\n\r\n  handleSearch = (event) => {\r\n    if(event)\r\n      event.preventDefault();\r\n    let searchTerm = this.state.searchTerm.toUpperCase();\r\n    this.setState({ landing: false, resultTitle: searchTerm, result: {} });\r\n\r\n    import(`./dictionary/D${searchTerm[0]}.json`)\r\n        .then(( Dictionary ) => {\r\n          let result = Dictionary.default[searchTerm];\r\n          if(typeof result === 'undefined'){\r\n            this.setState({ showError: true });\r\n          }\r\n          else {\r\n            //console.log(result);\r\n            this.setState({ resultTitle: searchTerm, result, showError: false, searchTerm: '' });\r\n          } \r\n        })\r\n        .catch(err => {\r\n          // Handle failure\r\n          //console.log(`error`, err);\r\n          this.setState({ showError: true })\r\n        });\r\n  }\r\n\r\n  searchForWord = (word) => {\r\n    this.setState({ searchTerm: word }, ()=>{\r\n      this.handleSearch();\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <div className=\"logoContainer\">\r\n            <a href=\"https://github.com/surajk95/darktionary\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Darktionary\r\n            </a>\r\n          </div>\r\n          <form onSubmit={this.handleSearch}>\r\n            <div className={this.state.landing ? \"searchForm landing\" : \"searchForm\"} >\r\n              <input\r\n                className=\"searchInput\"\r\n                type=\"text\"\r\n                placeholder=\"Search here\"\r\n                onChange={event=>{this.handleChange(event)}}\r\n                value={this.state.searchTerm}\r\n                autoFocus\r\n              ></input>\r\n              <button className=\"searchButton\" type=\"submit\" onClick={this.handlesearch}>\r\n                <img className=\"searchIcon\" alt=\"search-icon\" src={SearchIcon} />\r\n              </button>\r\n            </div>\r\n          </form>\r\n          {\r\n           (typeof this.state.result === 'object' && Object.keys(this.state.result).length !== 0) &&\r\n            <div className=\"searchResults\">\r\n                <div className=\"resultTitle\">\r\n                  {this.state.resultTitle}\r\n                </div>\r\n                <div className=\"titleUnderline\">\r\n                </div>\r\n                <div className=\"searchContent\">\r\n                {\r\n                  (this.state.result.SYNONYMS && this.state.result.SYNONYMS.length>0) &&\r\n                  <Synonyms\r\n                    synonyms={this.state.result.SYNONYMS}\r\n                    searchForWord={this.searchForWord}\r\n                  />\r\n                }\r\n                {\r\n                  (this.state.result.ANTONYMS && this.state.result.ANTONYMS.length>0) &&\r\n                  <Antonyms\r\n                    antonyms={this.state.result.ANTONYMS}\r\n                    searchForWord={this.searchForWord}\r\n                  />\r\n                }\r\n                {\r\n                  (this.state.result.MEANINGS && Object.values(this.state.result.MEANINGS) && Object.values(this.state.result.MEANINGS).length>0) &&\r\n                  <Definitions\r\n                    meanings={this.state.result.MEANINGS}\r\n                    isPartofSpeech={this.isPartofSpeech}\r\n                  />\r\n                }\r\n                </div>\r\n            </div>\r\n          }\r\n          {\r\n            (this.state.showError) &&\r\n            <div className=\"errorMessage\">\r\n              {this.state.errorMessage}\r\n            </div>\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}