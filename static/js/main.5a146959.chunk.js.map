{"version":3,"sources":["search-icon.png","dictionary lazy /^/.//.*/.json$/ groupOptions: {} namespace object","components/definitions.jsx","components/synonyms.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","Definitions","props","className","meanings","item","index","key","isPartofSpeech","speech_part","definition","Synonyms","synonyms","onClick","searchForWord","App","state","landing","searchTerm","result","resultTitle","errorMessage","showError","handleChange","event","setState","target","value","word","indexOf","toLowerCase","handleSearch","preventDefault","Dictionary","default","definitions","def","synonym","push","catch","err","href","rel","onSubmit","this","type","placeholder","onChange","autoFocus","handlesearch","alt","src","SearchIcon","length","values","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a146959.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-icon.625322a5.png\";","var map = {\n\t\"./a.json\": [\n\t\t18,\n\t\t3\n\t],\n\t\"./b.json\": [\n\t\t19,\n\t\t4\n\t],\n\t\"./c.json\": [\n\t\t20,\n\t\t5\n\t],\n\t\"./d.json\": [\n\t\t21,\n\t\t6\n\t],\n\t\"./e.json\": [\n\t\t22,\n\t\t7\n\t],\n\t\"./f.json\": [\n\t\t23,\n\t\t8\n\t],\n\t\"./g.json\": [\n\t\t24,\n\t\t9\n\t],\n\t\"./h.json\": [\n\t\t25,\n\t\t10\n\t],\n\t\"./i.json\": [\n\t\t26,\n\t\t11\n\t],\n\t\"./j.json\": [\n\t\t27,\n\t\t12\n\t],\n\t\"./k.json\": [\n\t\t28,\n\t\t13\n\t],\n\t\"./l.json\": [\n\t\t29,\n\t\t14\n\t],\n\t\"./m.json\": [\n\t\t30,\n\t\t15\n\t],\n\t\"./misc.json\": [\n\t\t31,\n\t\t16\n\t],\n\t\"./n.json\": [\n\t\t32,\n\t\t17\n\t],\n\t\"./o.json\": [\n\t\t33,\n\t\t18\n\t],\n\t\"./p.json\": [\n\t\t34,\n\t\t19\n\t],\n\t\"./q.json\": [\n\t\t35,\n\t\t20\n\t],\n\t\"./r.json\": [\n\t\t36,\n\t\t21\n\t],\n\t\"./s.json\": [\n\t\t37,\n\t\t22\n\t],\n\t\"./t.json\": [\n\t\t38,\n\t\t23\n\t],\n\t\"./u.json\": [\n\t\t39,\n\t\t24\n\t],\n\t\"./v.json\": [\n\t\t40,\n\t\t25\n\t],\n\t\"./w.json\": [\n\t\t41,\n\t\t26\n\t],\n\t\"./x.json\": [\n\t\t42,\n\t\t27\n\t],\n\t\"./y.json\": [\n\t\t43,\n\t\t28\n\t],\n\t\"./z.json\": [\n\t\t44,\n\t\t29\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 16;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\n\nexport default function Definitions(props) {\n  return (\n    <>\n      <span className=\"definitionHeading\">\n          Definition \n      </span>\n      {props.meanings.map((item, index) => {\n        return (\n          <div key={index}>\n              <span\n                key={index}\n                className={props.isPartofSpeech(item.speech_part)}\n              >\n                {item.speech_part}\n              </span>\n              <span className=\"wordDefinition\">\n                {item.definition}\n              </span>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Synonyms(props) {\n  return (\n    <div className=\"inlineContainer\">\n      <span className=\"inlineHeading\"> Synonyms </span>\n      {props.synonyms.map((item, index) => {\n        return (\n          <span\n            className=\"inlineItem\"\n            key={index}\n            onClick={() => props.searchForWord(item)}\n          >\n            {item}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport SearchIcon from './search-icon.png';\n\nimport Definitions from './components/definitions.jsx';\nimport Synonyms from './components/synonyms.jsx';\nimport Antonyms from './components/antonyms.jsx';\n\nclass App extends React.Component {\n  state = {\n    landing: true,\n    searchTerm: '',\n    result: {},\n    resultTitle: '',\n    errorMessage: 'Nope, nothing found. Try another word.',\n    showError: false,\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchTerm: event.target.value });\n\n  }\n\n  isPartofSpeech = (word) => {\n    let partsOfSpeech = [\n      \"noun\",\n      \"verb\",\n      \"adjective\",\n    ];\n    if(partsOfSpeech.indexOf(word.toLowerCase()) > -1)\n      return 'wordType'\n    else\n      return 'wordDefinition'\n  }\n\n  handleSearch = (event) => {\n    if(event)\n      event.preventDefault();\n    let searchTerm = this.state.searchTerm.toLowerCase();\n    this.setState({ landing: false, resultTitle: searchTerm, result: {} });\n    import(`./dictionary/${searchTerm[0]}.json`)\n        .then(( Dictionary ) => {\n          let result = Dictionary.default[searchTerm];\n          if(typeof result === 'undefined'){\n            this.setState({ showError: true });\n          }\n          else {\n            let meanings = result.meanings;\n            let definitions = meanings.map(item => ({\n              definition: item.def,\n              speech_part: item.speech_part\n            }));\n            //console.log(result);\n            let synonyms = [];\n            meanings.map(item =>item.synonyms && item.synonyms.map(synonym=>synonyms.push(synonym)));\n            result = {\n              synonyms,\n              definitions\n            }\n            //console.log(result);\n            this.setState({ resultTitle: searchTerm, result, showError: false, searchTerm: '' });\n          } \n        })\n        .catch(err => {\n          // Handle failure\n          //console.log(`error`, err);\n          this.setState({ showError: true })\n        });\n  }\n\n  searchForWord = (word) => {\n    this.setState({ searchTerm: word }, ()=>{\n      this.handleSearch();\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <div className=\"logoContainer\">\n            <a href=\"https://github.com/surajk95/darktionary\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Darktionary\n            </a>\n          </div>\n          <form onSubmit={this.handleSearch}>\n            <div className={this.state.landing ? \"searchForm landing\" : \"searchForm\"} >\n              <input\n                className=\"searchInput\"\n                type=\"text\"\n                placeholder=\"Search here\"\n                onChange={event=>{this.handleChange(event)}}\n                value={this.state.searchTerm}\n                autoFocus\n              ></input>\n              <button className=\"searchButton\" type=\"submit\" onClick={this.handlesearch}>\n                <img className=\"searchIcon\" alt=\"search-icon\" src={SearchIcon} />\n              </button>\n            </div>\n          </form>\n          {\n           (typeof this.state.result === 'object' && Object.keys(this.state.result).length !== 0) &&\n            <div className=\"searchResults\">\n                <div className=\"resultTitle\">\n                  {this.state.resultTitle}\n                </div>\n                <div className=\"titleUnderline\">\n                </div>\n                <div className=\"searchContent\">\n                {\n                  (this.state.result.synonyms && this.state.result.synonyms.length>0) &&\n                  <Synonyms\n                    synonyms={this.state.result.synonyms}\n                    searchForWord={this.searchForWord}\n                  />\n                }\n                {/* {\n                  (this.state.result.ANTONYMS && this.state.result.ANTONYMS.length>0) &&\n                  <Antonyms\n                    antonyms={this.state.result.ANTONYMS}\n                    searchForWord={this.searchForWord}\n                  />\n                } */}\n                {\n                  (this.state.result.definitions && Object.values(this.state.result.definitions) && Object.values(this.state.result.definitions).length>0) &&\n                  <Definitions\n                    meanings={this.state.result.definitions}\n                    isPartofSpeech={this.isPartofSpeech}\n                  />\n                }\n                </div>\n            </div>\n          }\n          {\n            (this.state.showError) &&\n            <div className=\"errorMessage\">\n              {this.state.errorMessage}\n            </div>\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}