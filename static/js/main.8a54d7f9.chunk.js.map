{"version":3,"sources":["dictionary lazy /^/.//D.*/.json$/ groupOptions: {} namespace object","components/definitions.jsx","components/synonyms.jsx","components/antonyms.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","Definitions","props","className","values","meanings","item","index","key","length","deeperItem","deeperIndex","isPartofSpeech","Synonyms","synonyms","onClick","searchForWord","Antonyms","antonyms","App","state","landing","searchTerm","result","resultTitle","errorMessage","showError","handleChange","event","setState","target","value","word","indexOf","toLowerCase","handleSearch","preventDefault","toUpperCase","Dictionary","default","catch","err","onSubmit","this","type","placeholder","onChange","autoFocus","handlesearch","alt","src","SYNONYMS","ANTONYMS","MEANINGS","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gLAAA,IAAIA,EAAM,CACT,YAAa,CACZ,GACA,GAED,YAAa,CACZ,GACA,GAED,YAAa,CACZ,GACA,GAED,YAAa,CACZ,GACA,GAED,YAAa,CACZ,GACA,GAED,YAAa,CACZ,GACA,GAED,YAAa,CACZ,GACA,GAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,IAED,YAAa,CACZ,GACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,MAGnCX,EAAoBa,KAAO,WAC1B,OAAOC,OAAOD,KAAKd,IAEpBC,EAAoBW,GAAK,GACzBI,EAAOC,QAAUhB,G,yHC1HF,SAASiB,EAAYC,GAClC,OACE,oCACE,0BAAMC,UAAU,qBAAhB,cAGCL,OAAOM,OAAOF,EAAMG,UAAUtB,KAAI,SAACuB,EAAMC,GACxC,OACE,yBAAKC,IAAKD,GACPD,EAAKG,OAAS,GACbH,EAAKvB,KAAI,SAAC2B,EAAYC,GACpB,MACwB,kBAAfD,GACL,0BACEF,IAAKG,EACLR,UAAWD,EAAMU,eAAeF,IAE/BA,WCjBR,SAASG,EAASX,GAC/B,OACE,yBAAKC,UAAU,mBACb,0BAAMA,UAAU,iBAAhB,cACCD,EAAMY,SAAS/B,KAAI,SAACuB,EAAMC,GACzB,OACE,0BACEJ,UAAU,aACVK,IAAKD,EACLQ,QAAS,kBAAMb,EAAMc,cAAcV,KAElCA,OCXE,SAASW,EAASf,GAC/B,OACE,yBAAKC,UAAU,mBACb,0BAAMA,UAAU,iBAAhB,cACCD,EAAMgB,SAASnC,KAAI,SAACuB,EAAMC,GACzB,OACE,0BACEJ,UAAU,aACVK,IAAKD,EACLQ,QAAS,kBAAMb,EAAMc,cAAcV,KAElCA,O,ICiHEa,E,2MAtHbC,MAAQ,CACNC,SAAS,EACTC,WAAY,GACZC,OAAQ,GACRC,YAAa,GACbC,aAAc,yCACdC,WAAW,G,EAGbC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEP,WAAYM,EAAME,OAAOC,S,EAI3CnB,eAAiB,SAACoB,GAMhB,MALoB,CAClB,OACA,OACA,aAEeC,QAAQD,EAAKE,gBAAkB,EACvC,WAEA,kB,EAGXC,aAAe,SAACP,GACXA,GACDA,EAAMQ,iBACR,IAAId,EAAa,EAAKF,MAAME,WAAWe,cACvC,EAAKR,SAAS,CAAER,SAAS,EAAOG,YAAaF,EAAYC,OAAQ,KAEjE,MAAO,aAAiBD,EAAW,GAAnC,UACKhC,MAAK,SAAEgD,GACN,IAAIf,EAASe,EAAWC,QAAQjB,GACX,qBAAXC,EACR,EAAKM,SAAS,CAAEH,WAAW,IAI3B,EAAKG,SAAS,CAAEL,YAAaF,EAAYC,SAAQG,WAAW,EAAOJ,WAAY,QAGlFkB,OAAM,SAAAC,GAGL,EAAKZ,SAAS,CAAEH,WAAW,Q,EAInCV,cAAgB,SAACgB,GACf,EAAKH,SAAS,CAAEP,WAAYU,IAAQ,WAClC,EAAKG,mB,wEAIC,IAAD,OACP,OACE,yBAAKhC,UAAU,OACX,0BAAMuC,SAAUC,KAAKR,cACnB,yBAAKhC,UAAWwC,KAAKvB,MAAMC,QAAU,qBAAuB,cAC1D,2BACElB,UAAU,cACVyC,KAAK,OACLC,YAAY,cACZC,SAAU,SAAAlB,GAAQ,EAAKD,aAAaC,IACpCG,MAAOY,KAAKvB,MAAME,WAClByB,WAAS,IAEX,4BAAQ5C,UAAU,eAAeyC,KAAK,SAAS7B,QAAS4B,KAAKK,cAC3D,yBAAK7C,UAAU,aAAa8C,IAAI,cAAcC,IAAI,+HAKzB,kBAAtBP,KAAKvB,MAAMG,QAAiE,IAA1CzB,OAAOD,KAAK8C,KAAKvB,MAAMG,QAAQd,QACxE,yBAAKN,UAAU,iBACX,yBAAKA,UAAU,eACZwC,KAAKvB,MAAMI,aAEd,yBAAKrB,UAAU,mBAEf,yBAAKA,UAAU,iBAEZwC,KAAKvB,MAAMG,OAAO4B,UAAYR,KAAKvB,MAAMG,OAAO4B,SAAS1C,OAAO,GACjE,kBAACI,EAAD,CACEC,SAAU6B,KAAKvB,MAAMG,OAAO4B,SAC5BnC,cAAe2B,KAAK3B,gBAIrB2B,KAAKvB,MAAMG,OAAO6B,UAAYT,KAAKvB,MAAMG,OAAO6B,SAAS3C,OAAO,GACjE,kBAACQ,EAAD,CACEC,SAAUyB,KAAKvB,MAAMG,OAAO6B,SAC5BpC,cAAe2B,KAAK3B,gBAIrB2B,KAAKvB,MAAMG,OAAO8B,UAAYvD,OAAOM,OAAOuC,KAAKvB,MAAMG,OAAO8B,WAAavD,OAAOM,OAAOuC,KAAKvB,MAAMG,OAAO8B,UAAU5C,OAAO,GAC7H,kBAACR,EAAD,CACEI,SAAUsC,KAAKvB,MAAMG,OAAO8B,SAC5BzC,eAAgB+B,KAAK/B,mBAO5B+B,KAAKvB,MAAMM,WACZ,yBAAKvB,UAAU,gBACZwC,KAAKvB,MAAMK,mB,GA/GR6B,IAAMC,WCKJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7E,MAAK,SAAA8E,GACjCA,EAAaC,kB","file":"static/js/main.8a54d7f9.chunk.js","sourcesContent":["var map = {\n\t\"./DA.json\": [\n\t\t17,\n\t\t3\n\t],\n\t\"./DB.json\": [\n\t\t18,\n\t\t4\n\t],\n\t\"./DC.json\": [\n\t\t19,\n\t\t5\n\t],\n\t\"./DD.json\": [\n\t\t20,\n\t\t6\n\t],\n\t\"./DE.json\": [\n\t\t21,\n\t\t7\n\t],\n\t\"./DF.json\": [\n\t\t22,\n\t\t8\n\t],\n\t\"./DG.json\": [\n\t\t23,\n\t\t9\n\t],\n\t\"./DH.json\": [\n\t\t24,\n\t\t10\n\t],\n\t\"./DI.json\": [\n\t\t25,\n\t\t11\n\t],\n\t\"./DJ.json\": [\n\t\t26,\n\t\t12\n\t],\n\t\"./DK.json\": [\n\t\t27,\n\t\t13\n\t],\n\t\"./DL.json\": [\n\t\t28,\n\t\t14\n\t],\n\t\"./DM.json\": [\n\t\t29,\n\t\t15\n\t],\n\t\"./DN.json\": [\n\t\t30,\n\t\t16\n\t],\n\t\"./DO.json\": [\n\t\t31,\n\t\t17\n\t],\n\t\"./DP.json\": [\n\t\t32,\n\t\t18\n\t],\n\t\"./DQ.json\": [\n\t\t33,\n\t\t19\n\t],\n\t\"./DR.json\": [\n\t\t34,\n\t\t20\n\t],\n\t\"./DS.json\": [\n\t\t35,\n\t\t21\n\t],\n\t\"./DT.json\": [\n\t\t36,\n\t\t22\n\t],\n\t\"./DU.json\": [\n\t\t37,\n\t\t23\n\t],\n\t\"./DV.json\": [\n\t\t38,\n\t\t24\n\t],\n\t\"./DW.json\": [\n\t\t39,\n\t\t25\n\t],\n\t\"./DX.json\": [\n\t\t40,\n\t\t26\n\t],\n\t\"./DY.json\": [\n\t\t41,\n\t\t27\n\t],\n\t\"./DZ.json\": [\n\t\t42,\n\t\t28\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 15;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\n\nexport default function Definitions(props) {\n  return (\n    <>\n      <span className=\"definitionHeading\">\n          Definition \n      </span>\n      {Object.values(props.meanings).map((item, index) => {\n        return (\n          <div key={index}>\n            {item.length > 0 &&\n              item.map((deeperItem, deeperIndex) => {\n                return (\n                  typeof deeperItem === \"string\" && (\n                    <span\n                      key={deeperIndex}\n                      className={props.isPartofSpeech(deeperItem)}\n                    >\n                      {deeperItem}\n                    </span>\n                  )\n                );\n              })}\n          </div>\n        );\n      })}\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Synonyms(props) {\n  return (\n    <div className=\"inlineContainer\">\n      <span className=\"inlineHeading\"> Synonyms </span>\n      {props.synonyms.map((item, index) => {\n        return (\n          <span\n            className=\"inlineItem\"\n            key={index}\n            onClick={() => props.searchForWord(item)}\n          >\n            {item}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Antonyms(props) {\n  return (\n    <div className=\"inlineContainer\">\n      <span className=\"inlineHeading\"> Antonyms </span>\n      {props.antonyms.map((item, index) => {\n        return (\n          <span\n            className=\"inlineItem\"\n            key={index}\n            onClick={() => props.searchForWord(item)}\n          >\n            {item}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\n\nimport Definitions from './components/definitions.jsx';\nimport Synonyms from './components/synonyms.jsx';\nimport Antonyms from './components/antonyms.jsx';\n\nclass App extends React.Component {\n  state = {\n    landing: true,\n    searchTerm: '',\n    result: {},\n    resultTitle: '',\n    errorMessage: 'Nope, nothing found. Try another word.',\n    showError: false,\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchTerm: event.target.value });\n\n  }\n\n  isPartofSpeech = (word) => {\n    let partsOfSpeech = [\n      \"noun\",\n      \"verb\",\n      \"adjective\",\n    ];\n    if(partsOfSpeech.indexOf(word.toLowerCase()) > -1)\n      return 'wordType'\n    else\n      return 'wordDefinition'\n  }\n\n  handleSearch = (event) => {\n    if(event)\n      event.preventDefault();\n    let searchTerm = this.state.searchTerm.toUpperCase();\n    this.setState({ landing: false, resultTitle: searchTerm, result: {} });\n\n    import(`./dictionary/D${searchTerm[0]}.json`)\n        .then(( Dictionary ) => {\n          let result = Dictionary.default[searchTerm];\n          if(typeof result === 'undefined'){\n            this.setState({ showError: true });\n          }\n          else {\n            //console.log(result);\n            this.setState({ resultTitle: searchTerm, result, showError: false, searchTerm: '' });\n          } \n        })\n        .catch(err => {\n          // Handle failure\n          //console.log(`error`, err);\n          this.setState({ showError: true })\n        });\n  }\n\n  searchForWord = (word) => {\n    this.setState({ searchTerm: word }, ()=>{\n      this.handleSearch();\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <form onSubmit={this.handleSearch}>\n            <div className={this.state.landing ? \"searchForm landing\" : \"searchForm\"} >\n              <input\n                className=\"searchInput\"\n                type=\"text\"\n                placeholder=\"Search here\"\n                onChange={event=>{this.handleChange(event)}}\n                value={this.state.searchTerm}\n                autoFocus\n              ></input>\n              <button className=\"searchButton\" type=\"submit\" onClick={this.handlesearch}>\n                <img className=\"searchIcon\" alt=\"search-icon\" src=\"https://icon-library.net/images/white-search-icon-transparent-background/white-search-icon-transparent-background-1.jpg\" />\n              </button>\n            </div>\n          </form>\n          {\n           (typeof this.state.result === 'object' && Object.keys(this.state.result).length !== 0) &&\n            <div className=\"searchResults\">\n                <div className=\"resultTitle\">\n                  {this.state.resultTitle}\n                </div>\n                <div className=\"titleUnderline\">\n                </div>\n                <div className=\"searchContent\">\n                {\n                  (this.state.result.SYNONYMS && this.state.result.SYNONYMS.length>0) &&\n                  <Synonyms\n                    synonyms={this.state.result.SYNONYMS}\n                    searchForWord={this.searchForWord}\n                  />\n                }\n                {\n                  (this.state.result.ANTONYMS && this.state.result.ANTONYMS.length>0) &&\n                  <Antonyms\n                    antonyms={this.state.result.ANTONYMS}\n                    searchForWord={this.searchForWord}\n                  />\n                }\n                {\n                  (this.state.result.MEANINGS && Object.values(this.state.result.MEANINGS) && Object.values(this.state.result.MEANINGS).length>0) &&\n                  <Definitions\n                    meanings={this.state.result.MEANINGS}\n                    isPartofSpeech={this.isPartofSpeech}\n                  />\n                }\n                </div>\n            </div>\n          }\n          {\n            (this.state.showError) &&\n            <div className=\"errorMessage\">\n              {this.state.errorMessage}\n            </div>\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}